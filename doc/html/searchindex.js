Search.setIndex({"docnames": ["base_statement", "calculate_expression", "compile", "const", "enums", "error", "if_block", "index", "main", "modules", "normal_block", "read", "run_block", "switch_block", "token_self", "tool_self", "while_block"], "filenames": ["base_statement.rst", "calculate_expression.rst", "compile.rst", "const.rst", "enums.rst", "error.rst", "if_block.rst", "index.rst", "main.rst", "modules.rst", "normal_block.rst", "read.rst", "run_block.rst", "switch_block.rst", "token_self.rst", "tool_self.rst", "while_block.rst"], "titles": ["base_statement module", "calculate_expression module", "compile module", "const module", "enums module", "error module", "if_block module", "Welcome to \u4e4b\u4e4e\u8005\u4e5f\u2019s documentation!", "main module", "scripts", "normal_block module", "read module", "run_block module", "switch_block module", "token_self module", "tool_self module", "while_block module"], "terms": {"main": 9, "modul": 9, "ariexpress": 0, "len_num": [0, 5, 6, 10, 12, 13, 16], "print_error": 0, "true": [0, 1, 5, 11, 15, 16], "and": [0, 1], "or": [0, 1], "integ": [0, 1, 5, 6, 10, 12, 13, 14, 15, 16], "bool": [0, 1, 5, 6, 11, 12, 13, 15, 16], "option": [0, 5, 11, 15], "default": [0, 5, 11, 15], "to": [0, 5, 11, 15], "flaot": 0, "none": [0, 1, 2, 5, 6, 10, 11, 12, 13, 14, 16], "assignreadari": 0, "name": [0, 5, 12, 13], "oper": 0, "string": [0, 5, 12, 13, 14, 15], "char": [0, 5, 11], "assignreadoper": 0, "assignment1": 0, "float": [0, 1], "assignment2": 0, "no": 0, "calcul": 0, "val": [0, 12, 15], "logicexpress": 0, "strexpress": 0, "calculatecompareexpress": 1, "sequenc": 1, "fals": [1, 15], "list": [1, 15], "str": [1, 5, 11, 15], "calculateexpress": 1, "token": [1, 11, 14, 15], "calculatelogicexpress": 1, "express": 1, "findinvalidari": 1, "findinvalidcompar": 1, "findinvalidlog": 1, "class": [2, 11, 14], "path": [2, 11], "encod": [2, 11], "utf": [2, 11], "read": 2, "start": [2, 14], "errorexpect": 5, "is_print": 5, "errorinit": 5, "errorundefin": 5, "errorunexpectchar": 5, "errorunexpecttyp": 5, "type_error": 5, "type_exp": 5, "errorunhelpfulstat": 5, "erroruninit": 5, "errorunivers": 5, "checkifblockend": 6, "mid": [6, 12], "end": [6, 12, 14, 16], "if": [6, 10, 11, 12, 16], "els": [6, 12], "checkifblockfront": 6, "then": [6, 13, 16], "divideifblock": 6, "compilefind": 10, "compileinput": 10, "compileprint": 10, "declarevar": 10, "normalblock": 10, "while": [10, 12, 16], "switch": [10, 12, 13, 16], "object": [11, 14], "buildtoken": 11, "checkchar": 11, "checkid": 11, "is_swap": 11, "id": [11, 15], "const": 11, "checkstr": 11, "dividetoken": 11, "readblock": 11, "savetoken": 11, "log": 11, "col": 11, "int": 11, "checkblockend": 12, "findrightpositon": 12, "ifblock": 12, "runblock": 12, "arg": 12, "runifblock": 12, "switchblock": 12, "whileblock": 12, "checkswitchblockfront": 13, "checkswitchbranch": 13, "case": 13, "addtoken": 14, "type": 14, "valu": 14, "getendtyp": 14, "getlen": 14, "gettyp": 14, "index": [14, 15], "getvalu": 14, "printtoken": 14, "swaptoken": 14, "booltostr": 15, "finddata": 15, "forwordindex": 15, "getindex": 15, "openfil": 15, "file": 15, "stringtobool": 15, "tokentolist": 15, "end_char": 15, "updateindex": 15, "start_index": 15, "checkwhileblockfront": 16, "dividewhileswitchblock": 16, "10": 2, "compileconnect": 10, "connecttestpil": 15}, "objects": {"": [[0, 0, 0, "-", "base_statement"], [1, 0, 0, "-", "calculate_expression"], [2, 0, 0, "-", "compile"], [3, 0, 0, "-", "const"], [4, 0, 0, "-", "enums"], [5, 0, 0, "-", "error"], [6, 0, 0, "-", "if_block"], [8, 0, 0, "-", "main"], [10, 0, 0, "-", "normal_block"], [11, 0, 0, "-", "read"], [12, 0, 0, "-", "run_block"], [13, 0, 0, "-", "switch_block"], [14, 0, 0, "-", "token_self"], [15, 0, 0, "-", "tool_self"], [16, 0, 0, "-", "while_block"]], "base_statement": [[0, 1, 1, "", "ariExpression"], [0, 1, 1, "", "assignReadAri"], [0, 1, 1, "", "assignReadOperator"], [0, 1, 1, "", "assignment1"], [0, 1, 1, "", "assignment2"], [0, 1, 1, "", "calculate"], [0, 1, 1, "", "logicExpression"], [0, 1, 1, "", "strExpression"]], "calculate_expression": [[1, 1, 1, "", "calculateCompareExpression"], [1, 1, 1, "", "calculateExpression"], [1, 1, 1, "", "calculateLogicExpression"], [1, 1, 1, "", "findInvalidAri"], [1, 1, 1, "", "findInvalidCompare"], [1, 1, 1, "", "findInvalidLogic"]], "compile": [[2, 2, 1, "", "Compiler"]], "compile.Compiler": [[2, 3, 1, "", "start"]], "error": [[5, 1, 1, "", "errorExpect"], [5, 1, 1, "", "errorInit"], [5, 1, 1, "", "errorUndefine"], [5, 1, 1, "", "errorUnexpectChar"], [5, 1, 1, "", "errorUnexpectType"], [5, 1, 1, "", "errorUnhelpfulStatement"], [5, 1, 1, "", "errorUninit"], [5, 1, 1, "", "errorUniversal"]], "if_block": [[6, 1, 1, "", "checkIfBlockEnd"], [6, 1, 1, "", "checkIfBlockFront"], [6, 1, 1, "", "divideIfBlock"]], "main": [[8, 1, 1, "", "main"]], "normal_block": [[10, 1, 1, "", "compileConnect"], [10, 1, 1, "", "compileFind"], [10, 1, 1, "", "compileInput"], [10, 1, 1, "", "compilePrint"], [10, 1, 1, "", "declareVar"], [10, 1, 1, "", "normalBlock"]], "read": [[11, 2, 1, "", "Read"]], "read.Read": [[11, 3, 1, "", "buildToken"], [11, 3, 1, "", "checkChar"], [11, 3, 1, "", "checkID"], [11, 3, 1, "", "checkString"], [11, 3, 1, "", "divideToken"], [11, 3, 1, "", "readBlock"], [11, 3, 1, "", "saveToken"]], "run_block": [[12, 1, 1, "", "checkBlockEnd"], [12, 1, 1, "", "findRightPositon"], [12, 1, 1, "", "ifBlock"], [12, 1, 1, "", "runBlock"], [12, 1, 1, "", "runIfBlock"], [12, 1, 1, "", "switchBlock"], [12, 1, 1, "", "whileBlock"]], "switch_block": [[13, 1, 1, "", "checkSwitchBlockFront"], [13, 1, 1, "", "checkSwitchBranch"]], "token_self": [[14, 2, 1, "", "Token"]], "token_self.Token": [[14, 3, 1, "", "addToken"], [14, 3, 1, "", "getEndType"], [14, 3, 1, "", "getLen"], [14, 3, 1, "", "getType"], [14, 3, 1, "", "getValue"], [14, 3, 1, "", "printToken"], [14, 3, 1, "", "swapToken"]], "tool_self": [[15, 1, 1, "", "boolToString"], [15, 1, 1, "", "connectTestPile"], [15, 1, 1, "", "findData"], [15, 1, 1, "", "forwordIndex"], [15, 1, 1, "", "getIndex"], [15, 1, 1, "", "openFile"], [15, 1, 1, "", "stringToBool"], [15, 1, 1, "", "tokenToList"], [15, 1, 1, "", "updateIndex"]], "while_block": [[16, 1, 1, "", "checkWhileBlockFront"], [16, 1, 1, "", "divideWhileSwitchBlock"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python \u6a21\u5757"], "1": ["py", "function", "Python \u51fd\u6570"], "2": ["py", "class", "Python \u7c7b"], "3": ["py", "method", "Python \u65b9\u6cd5"]}, "titleterms": {"welcom": 7, "to": 7, "document": 7, "indic": 7, "and": 7, "tabl": 7, "main": 8, "modul": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16], "script": 9, "base_stat": 0, "calculate_express": 1, "compil": 2, "const": 3, "enum": 4, "error": 5, "if_block": 6, "normal_block": 10, "read": 11, "run_block": 12, "switch_block": 13, "token_self": 14, "tool_self": 15, "while_block": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Welcome to \u4e4b\u4e4e\u8005\u4e5f\u2019s documentation!": [[7, "welcome-to-s-documentation"]], "Indices and tables": [[7, "indices-and-tables"]], "main module": [[8, "module-main"]], "scripts": [[9, "scripts"]], "const module": [[3, "module-const"]], "enums module": [[4, "module-enums"]], "base_statement module": [[0, "module-base_statement"]], "calculate_expression module": [[1, "module-calculate_expression"]], "compile module": [[2, "module-compile"]], "error module": [[5, "module-error"]], "if_block module": [[6, "module-if_block"]], "read module": [[11, "module-read"]], "run_block module": [[12, "module-run_block"]], "switch_block module": [[13, "module-switch_block"]], "token_self module": [[14, "module-token_self"]], "while_block module": [[16, "module-while_block"]], "normal_block module": [[10, "module-normal_block"]], "tool_self module": [[15, "module-tool_self"]]}, "indexentries": {"compileconnect()\uff08\u5728 normal_block \u6a21\u5757\u4e2d\uff09": [[10, "normal_block.compileConnect"]], "compilefind()\uff08\u5728 normal_block \u6a21\u5757\u4e2d\uff09": [[10, "normal_block.compileFind"]], "compileinput()\uff08\u5728 normal_block \u6a21\u5757\u4e2d\uff09": [[10, "normal_block.compileInput"]], "compileprint()\uff08\u5728 normal_block \u6a21\u5757\u4e2d\uff09": [[10, "normal_block.compilePrint"]], "declarevar()\uff08\u5728 normal_block \u6a21\u5757\u4e2d\uff09": [[10, "normal_block.declareVar"]], "module": [[10, "module-normal_block"], [15, "module-tool_self"]], "normalblock()\uff08\u5728 normal_block \u6a21\u5757\u4e2d\uff09": [[10, "normal_block.normalBlock"]], "normal_block": [[10, "module-normal_block"]], "booltostring()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.boolToString"]], "connecttestpile()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.connectTestPile"]], "finddata()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.findData"]], "forwordindex()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.forwordIndex"]], "getindex()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.getIndex"]], "openfile()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.openFile"]], "stringtobool()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.stringToBool"]], "tokentolist()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.tokenToList"]], "tool_self": [[15, "module-tool_self"]], "updateindex()\uff08\u5728 tool_self \u6a21\u5757\u4e2d\uff09": [[15, "tool_self.updateIndex"]]}})